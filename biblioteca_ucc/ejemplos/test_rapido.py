"""
Script simplificado para pruebas r√°pidas del sistema.
"""
from datetime import datetime, timedelta
from recursos import FabricaLibroImpreso, GestorDeInventario
from prestamos import PrestamoBase
from decoradores import DecoradorNotificacionSMS
from estrategias import MultaEstudianteStrategy, MultaDocenteStrategy


def test_rapido():
    """Prueba r√°pida del sistema completo."""
    print("\n" + "=" * 60)
    print("  PRUEBA R√ÅPIDA DEL SISTEMA DE BIBLIOTECA UCC")
    print("=" * 60)
    
    # 1. Crear libro con Factory
    print("\n1Ô∏è‚É£ Creando libro...")
    gestor = GestorDeInventario()
    fabrica = FabricaLibroImpreso()
    
    libro = gestor.agregar_recurso_con_fabrica(
        fabrica,
        titulo="Patrones de Dise√±o",
        autor="Gang of Four",
        isbn="978-0201633610",
        fecha_adquisicion=datetime.now() - timedelta(days=365 * 4),
        numero_paginas=395,
        editorial="Addison-Wesley"
    )
    
    # 2. Crear pr√©stamo
    print("\n2Ô∏è‚É£ Creando pr√©stamo...")
    prestamo = PrestamoBase(
        recurso=libro,
        usuario="Ana Garc√≠a (Estudiante)",
        estrategia_multa=MultaEstudianteStrategy()
    )
    print(f"   ‚úì Pr√©stamo creado: {prestamo.obtener_descripcion()}")
    
    # 3. Decorar con SMS
    print("\n3Ô∏è‚É£ A√±adiendo servicio SMS...")
    prestamo_decorado = DecoradorNotificacionSMS(prestamo, "+57-300-1234567")
    print(f"   ‚úì Costo base: ${prestamo.obtener_costo_base():.2f}")
    print(f"   ‚úì Costo con SMS: ${prestamo_decorado.obtener_costo_base():.2f}")
    
    # 4. Simular retraso y calcular multas
    print("\n4Ô∏è‚É£ Simulando retraso de 10 d√≠as...")
    prestamo._fecha_prestamo = datetime.now() - timedelta(days=24)  # 14 + 10 d√≠as
    
    print("\n   Estrategia 1: Estudiante")
    multa1 = prestamo.calcular_multa()
    print(f"   üíµ Multa: ${multa1:.2f}")
    
    prestamo.establecer_estrategia_multa(MultaDocenteStrategy())
    print("\n   Estrategia 2: Docente")
    multa2 = prestamo.calcular_multa()
    print(f"   üíµ Multa: ${multa2:.2f}")
    
    print("\n‚úÖ Prueba completada exitosamente!")
    print("=" * 60)


if __name__ == "__main__":
    test_rapido()